// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApi.Data;

namespace TestApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220826082217_semua")]
    partial class semua
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestApi.Model.custommer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("custommer_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tb_custommer");
                });

            modelBuilder.Entity("TestApi.Model.custommer_address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("address")
                        .HasColumnType("datetime2");

                    b.Property<int?>("custommerid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("custommerid");

                    b.ToTable("tb_custommer_addresses");
                });

            modelBuilder.Entity("TestApi.Model.detail_payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("jumlah")
                        .HasColumnType("int");

                    b.Property<int?>("payment_Methodid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("payment_Methodid");

                    b.ToTable("tb_detail_payment");
                });

            modelBuilder.Entity("TestApi.Model.detail_product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("jumlah")
                        .HasColumnType("int");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productid");

                    b.ToTable("tb_detail_product");
                });

            modelBuilder.Entity("TestApi.Model.payment_method", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("is_active")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tb_payment_method");
                });

            modelBuilder.Entity("TestApi.Model.product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name_product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tb_product");
                });

            modelBuilder.Entity("TestApi.Model.transaksi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("custommer_Addressid")
                        .HasColumnType("int");

                    b.Property<int?>("payment_Methodid")
                        .HasColumnType("int");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("custommer_Addressid");

                    b.HasIndex("payment_Methodid");

                    b.HasIndex("productid");

                    b.ToTable("tb_transaksi");
                });

            modelBuilder.Entity("TestApi.Model.custommer_address", b =>
                {
                    b.HasOne("TestApi.Model.custommer", "custommer")
                        .WithMany()
                        .HasForeignKey("custommerid");

                    b.Navigation("custommer");
                });

            modelBuilder.Entity("TestApi.Model.detail_payment", b =>
                {
                    b.HasOne("TestApi.Model.payment_method", "payment_Method")
                        .WithMany()
                        .HasForeignKey("payment_Methodid");

                    b.Navigation("payment_Method");
                });

            modelBuilder.Entity("TestApi.Model.detail_product", b =>
                {
                    b.HasOne("TestApi.Model.product", "product")
                        .WithMany()
                        .HasForeignKey("productid");

                    b.Navigation("product");
                });

            modelBuilder.Entity("TestApi.Model.transaksi", b =>
                {
                    b.HasOne("TestApi.Model.custommer_address", "custommer_Address")
                        .WithMany()
                        .HasForeignKey("custommer_Addressid");

                    b.HasOne("TestApi.Model.payment_method", "payment_Method")
                        .WithMany()
                        .HasForeignKey("payment_Methodid");

                    b.HasOne("TestApi.Model.product", "product")
                        .WithMany()
                        .HasForeignKey("productid");

                    b.Navigation("custommer_Address");

                    b.Navigation("payment_Method");

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
